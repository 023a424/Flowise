{
    "description": "An email reply HITL (human in the loop) agent that can proceed or refine the email with user input",
    "usecases": ["Human In Loop"],
    "nodes": [
        {
            "id": "startAgentflow_0",
            "type": "agentFlow",
            "position": {
                "x": -118.23047532495553,
                "y": 88.47955575751035
            },
            "data": {
                "id": "startAgentflow_0",
                "label": "Start",
                "version": 1,
                "name": "startAgentflow",
                "type": "Start",
                "color": "#7EE787",
                "hideInput": true,
                "baseClasses": ["Start"],
                "category": "Agent Flows",
                "description": "Starting point of the agentflow",
                "inputParams": [
                    {
                        "label": "Input Type",
                        "name": "startInputType",
                        "type": "options",
                        "options": [
                            {
                                "label": "Chat Input",
                                "name": "chatInput",
                                "description": "Start the conversation with chat input"
                            },
                            {
                                "label": "Form Input",
                                "name": "formInput",
                                "description": "Start the workflow with form inputs"
                            }
                        ],
                        "default": "chatInput",
                        "id": "startAgentflow_0-input-startInputType-options",
                        "display": true
                    },
                    {
                        "label": "Form Title",
                        "name": "formTitle",
                        "type": "string",
                        "placeholder": "Please Fill Out The Form",
                        "show": {
                            "startInputType": "formInput"
                        },
                        "id": "startAgentflow_0-input-formTitle-string",
                        "display": true
                    },
                    {
                        "label": "Form Description",
                        "name": "formDescription",
                        "type": "string",
                        "placeholder": "Complete all fields below to continue",
                        "show": {
                            "startInputType": "formInput"
                        },
                        "id": "startAgentflow_0-input-formDescription-string",
                        "display": true
                    },
                    {
                        "label": "Form Input Types",
                        "name": "formInputTypes",
                        "description": "Specify the type of form input",
                        "type": "array",
                        "show": {
                            "startInputType": "formInput"
                        },
                        "array": [
                            {
                                "label": "Type",
                                "name": "type",
                                "type": "options",
                                "options": [
                                    {
                                        "label": "String",
                                        "name": "string"
                                    },
                                    {
                                        "label": "Number",
                                        "name": "number"
                                    },
                                    {
                                        "label": "Boolean",
                                        "name": "boolean"
                                    },
                                    {
                                        "label": "Options",
                                        "name": "options"
                                    }
                                ],
                                "default": "string"
                            },
                            {
                                "label": "Label",
                                "name": "label",
                                "type": "string",
                                "placeholder": "Label for the input"
                            },
                            {
                                "label": "Variable Name",
                                "name": "name",
                                "type": "string",
                                "placeholder": "Variable name for the input (must be camel case)",
                                "description": "Variable name must be camel case. For example: firstName, lastName, etc."
                            },
                            {
                                "label": "Add Options",
                                "name": "addOptions",
                                "type": "array",
                                "show": {
                                    "formInputTypes[$index].type": "options"
                                },
                                "array": [
                                    {
                                        "label": "Option",
                                        "name": "option",
                                        "type": "string"
                                    }
                                ]
                            }
                        ],
                        "id": "startAgentflow_0-input-formInputTypes-array",
                        "display": true
                    },
                    {
                        "label": "Flow State",
                        "name": "startState",
                        "description": "Runtime state during the execution of the workflow",
                        "type": "array",
                        "optional": true,
                        "array": [
                            {
                                "label": "Key",
                                "name": "key",
                                "type": "string",
                                "placeholder": "Foo"
                            },
                            {
                                "label": "Value",
                                "name": "value",
                                "type": "string",
                                "placeholder": "Bar"
                            }
                        ],
                        "id": "startAgentflow_0-input-startState-array",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "startInputType": "formInput",
                    "formTitle": "Email Template",
                    "formDescription": "This is an example of received email",
                    "formInputTypes": [
                        {
                            "type": "string",
                            "label": "From",
                            "name": "from",
                            "addOptions": ""
                        },
                        {
                            "type": "string",
                            "label": "Subject",
                            "name": "subject",
                            "addOptions": ""
                        },
                        {
                            "type": "string",
                            "label": "Body",
                            "name": "body",
                            "addOptions": ""
                        }
                    ],
                    "startState": []
                },
                "outputAnchors": [
                    {
                        "id": "startAgentflow_0-output-startAgentflow",
                        "label": "Start",
                        "name": "startAgentflow"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 101,
            "height": 65,
            "selected": false,
            "positionAbsolute": {
                "x": -118.23047532495553,
                "y": 88.47955575751035
            },
            "dragging": false
        },
        {
            "id": "agentAgentflow_0",
            "position": {
                "x": 32.282612377972924,
                "y": 69.80857402513341
            },
            "type": "agentFlow",
            "data": {
                "id": "agentAgentflow_0",
                "label": "Agent 0",
                "version": 1,
                "name": "agentAgentflow",
                "type": "Agent",
                "color": "#4DD0E1",
                "baseClasses": ["Agent"],
                "category": "Agent Flows",
                "description": "Dynamically choose and utilize tools during runtime, enabling multi-step reasoning",
                "inputParams": [
                    {
                        "label": "Model",
                        "name": "agentModel",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "loadConfig": true,
                        "id": "agentAgentflow_0-input-agentModel-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Messages",
                        "name": "agentMessages",
                        "type": "array",
                        "optional": true,
                        "acceptVariable": true,
                        "array": [
                            {
                                "label": "Role",
                                "name": "role",
                                "type": "options",
                                "options": [
                                    {
                                        "label": "System",
                                        "name": "system"
                                    },
                                    {
                                        "label": "Assistant",
                                        "name": "assistant"
                                    },
                                    {
                                        "label": "Developer",
                                        "name": "developer"
                                    },
                                    {
                                        "label": "User",
                                        "name": "user"
                                    }
                                ]
                            },
                            {
                                "label": "Content",
                                "name": "content",
                                "type": "string",
                                "acceptVariable": true,
                                "generateInstruction": true,
                                "rows": 4
                            }
                        ],
                        "id": "agentAgentflow_0-input-agentMessages-array",
                        "display": true
                    },
                    {
                        "label": "Tools",
                        "name": "agentTools",
                        "type": "array",
                        "optional": true,
                        "array": [
                            {
                                "label": "Tool",
                                "name": "agentSelectedTool",
                                "type": "asyncOptions",
                                "loadMethod": "listTools",
                                "loadConfig": true
                            }
                        ],
                        "id": "agentAgentflow_0-input-agentTools-array",
                        "display": true
                    },
                    {
                        "label": "Knowledge (Document Stores)",
                        "name": "agentKnowledgeDocumentStores",
                        "type": "array",
                        "description": "Give your agent context about different document sources. Document stores must be upserted in advance.",
                        "array": [
                            {
                                "label": "Document Store",
                                "name": "documentStore",
                                "type": "asyncOptions",
                                "loadMethod": "listStores"
                            },
                            {
                                "label": "Describe Knowledge",
                                "name": "docStoreDescription",
                                "type": "string",
                                "generateDocStoreDescription": true,
                                "placeholder": "Describe what the knowledge base is about, this is useful for the AI to know when and how to search for correct information",
                                "rows": 4
                            },
                            {
                                "label": "Return Source Documents",
                                "name": "returnSourceDocuments",
                                "type": "boolean",
                                "optional": true
                            }
                        ],
                        "optional": true,
                        "id": "agentAgentflow_0-input-agentKnowledgeDocumentStores-array",
                        "display": true
                    },
                    {
                        "label": "Enable Memory",
                        "name": "agentEnableMemory",
                        "type": "boolean",
                        "description": "Enable memory for the conversation thread",
                        "default": true,
                        "optional": true,
                        "id": "agentAgentflow_0-input-agentEnableMemory-boolean",
                        "display": true
                    },
                    {
                        "label": "Memory Type",
                        "name": "agentMemoryType",
                        "type": "options",
                        "options": [
                            {
                                "label": "All Messages",
                                "name": "allMessages",
                                "description": "Retrieve all messages from the conversation"
                            },
                            {
                                "label": "Window Size",
                                "name": "windowSize",
                                "description": "Uses a fixed window size to surface the last N messages"
                            },
                            {
                                "label": "Conversation Summary",
                                "name": "conversationSummary",
                                "description": "Summarizes the whole conversation"
                            },
                            {
                                "label": "Conversation Summary Buffer",
                                "name": "conversationSummaryBuffer",
                                "description": "Summarize conversations once token limit is reached. Default to 2000"
                            }
                        ],
                        "optional": true,
                        "default": "allMessages",
                        "show": {
                            "agentEnableMemory": true
                        },
                        "id": "agentAgentflow_0-input-agentMemoryType-options",
                        "display": true
                    },
                    {
                        "label": "Window Size",
                        "name": "agentMemoryWindowSize",
                        "type": "number",
                        "default": "20",
                        "description": "Uses a fixed window size to surface the last N messages",
                        "show": {
                            "agentMemoryType": "windowSize"
                        },
                        "id": "agentAgentflow_0-input-agentMemoryWindowSize-number",
                        "display": false
                    },
                    {
                        "label": "Max Token Limit",
                        "name": "agentMemoryMaxTokenLimit",
                        "type": "number",
                        "default": "2000",
                        "description": "Summarize conversations once token limit is reached. Default to 2000",
                        "show": {
                            "agentMemoryType": "conversationSummaryBuffer"
                        },
                        "id": "agentAgentflow_0-input-agentMemoryMaxTokenLimit-number",
                        "display": false
                    },
                    {
                        "label": "User Message",
                        "name": "agentUserMessage",
                        "type": "string",
                        "description": "User message will be insert at the end of the messages",
                        "rows": 4,
                        "optional": true,
                        "acceptVariable": true,
                        "default": "<p><span class=\"variable\" data-type=\"mention\" data-id=\"question\" data-label=\"question\">{{ question }}</span> </p>",
                        "show": {
                            "agentEnableMemory": true
                        },
                        "id": "agentAgentflow_0-input-agentUserMessage-string",
                        "display": true
                    },
                    {
                        "label": "Update Flow State",
                        "name": "agentUpdateState",
                        "description": "Update runtime state during the execution of the workflow",
                        "type": "array",
                        "optional": true,
                        "acceptVariable": true,
                        "array": [
                            {
                                "label": "Key",
                                "name": "key",
                                "type": "asyncOptions",
                                "loadMethod": "listRuntimeStateKeys",
                                "freeSolo": true
                            },
                            {
                                "label": "Value",
                                "name": "value",
                                "type": "string",
                                "acceptVariable": true,
                                "acceptNodeOutputAsVariable": true
                            }
                        ],
                        "id": "agentAgentflow_0-input-agentUpdateState-array",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "agentModel": "chatOpenAI",
                    "agentMessages": [
                        {
                            "role": "system",
                            "content": "Reply to the user's email by researching their background context and crafting a detailed response.\n\n- Understand the specific context of the user's request, including their previous interactions, any relevant history, and any specific details they have provided. \n- Consider the tone and purpose of your response, aiming to address the user's needs clearly and professionally.\n\n# Steps\n\n1. **Research the User's Background**: Gather relevant information about the user, including previous emails, inquiries, and any context that could inform your response.\n2. **Analyze the User's Request**: Identify the specific questions or issues the user has raised in their email.\n3. **Draft Your Response**: Formulate a well-structured email that answers the user's questions, provides necessary information, and maintains a friendly yet professional tone.\n4. **Review and Edit**: Check for clarity, coherence, and tone, ensuring that your response is appropriate for the user's context and needs.\n5. **Final Touches**: Add a closing statement that encourages further communication if needed.\n\n# Output Format\n\nThe email response should be a well-structured paragraph, ideally 150-250 words, formatted in standard email style (greeting, body, closing).\n\n# Examples\n\n**Example 1:**\n- **Input**: User asks about the status of their recent purchase and expresses concern about shipping delays.\n- **Output**: \n  ```\n  Subject: Re: Inquiry About Purchase Status\n\n  Dear [User's Name],\n\n  Thank you for reaching out about your recent purchase. I understand that shipping delays can be frustrating, and I appreciate your patience. Currently, your order is scheduled to ship on [insert estimated shipping date]. We are actively working to resolve any delays and ensure your package arrives as soon as possible. Please let me know if you have any further questions or concerns.\n\n  Best regards,\n  [Your Name]\n  ```\n\n**Example 2:**\n- **Input**: User requests information on a new product launch.\n- **Output**: \n  ```\n  Subject: Re: Inquiry About New Product Launch\n\n  Hi [User's Name],\n\n  I appreciate your interest in our upcoming product launch! We are excited to introduce [Product Name] on [Launch Date]. This new product features [Key Features/Benefits]. For more details, you can visit our website or feel free to ask if you have any specific questions.\n\n  Looking forward to your response!\n\n  Sincerely,\n  [Your Name]\n  ```\n\n# Notes\n\n- Ensure to maintain a professional tone and customize the email according to the user's familiarity and previous interactions.\n- Pay attention to any specific requests or preferences stated by the user in previous communications.\n- Always provide a way for the user to continue the conversation if they have further questions or need additional assistance."
                        }
                    ],
                    "agentTools": [
                        {
                            "agentSelectedTool": "googleCustomSearch",
                            "agentSelectedToolConfig": {
                                "agentSelectedTool": "googleCustomSearch"
                            }
                        },
                        {
                            "agentSelectedTool": "currentDateTime",
                            "agentSelectedToolConfig": {
                                "agentSelectedTool": "currentDateTime"
                            }
                        }
                    ],
                    "agentKnowledgeDocumentStores": "",
                    "agentEnableMemory": true,
                    "agentMemoryType": "allMessages",
                    "agentUserMessage": "<p><span class=\"variable\" data-type=\"mention\" data-id=\"$form.body\" data-label=\"$form.body\">{{ $form.body }}</span> </p>",
                    "agentUpdateState": [],
                    "agentModelConfig": {
                        "cache": "",
                        "modelName": "gpt-4o-mini",
                        "temperature": 0.9,
                        "streaming": true,
                        "maxTokens": "",
                        "topP": "",
                        "frequencyPenalty": "",
                        "presencePenalty": "",
                        "timeout": "",
                        "strictToolCalling": "",
                        "stopSequence": "",
                        "basepath": "",
                        "proxyUrl": "",
                        "baseOptions": "",
                        "allowImageUploads": "",
                        "imageResolution": "low",
                        "reasoningEffort": "medium",
                        "agentModel": "chatOpenAI"
                    }
                },
                "outputAnchors": [
                    {
                        "id": "agentAgentflow_0-output-agentAgentflow",
                        "label": "Agent",
                        "name": "agentAgentflow"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 168,
            "height": 103,
            "selected": false,
            "positionAbsolute": {
                "x": 32.282612377972924,
                "y": 69.80857402513341
            },
            "dragging": false
        },
        {
            "id": "loopAgentflow_0",
            "position": {
                "x": 461.32144796936547,
                "y": 144.4739670999407
            },
            "type": "agentFlow",
            "data": {
                "id": "loopAgentflow_0",
                "label": "Loop 0",
                "version": 1,
                "name": "loopAgentflow",
                "type": "Loop",
                "color": "#FFA07A",
                "hideOutput": true,
                "baseClasses": ["Loop"],
                "category": "Agent Flows",
                "description": "Loop back to a previous node",
                "inputParams": [
                    {
                        "label": "Loop Back To",
                        "name": "loopBackToNode",
                        "type": "asyncOptions",
                        "loadMethod": "listPreviousNodes",
                        "freeSolo": true,
                        "id": "loopAgentflow_0-input-loopBackToNode-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Max Loop Count",
                        "name": "maxLoopCount",
                        "type": "number",
                        "default": 10,
                        "id": "loopAgentflow_0-input-maxLoopCount-number",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "loopBackToNode": "agentAgentflow_0-Agent 0",
                    "maxLoopCount": 10,
                    "undefined": ""
                },
                "outputAnchors": [],
                "outputs": {},
                "selected": false
            },
            "width": 113,
            "height": 65,
            "positionAbsolute": {
                "x": 461.32144796936547,
                "y": 144.4739670999407
            },
            "selected": false,
            "dragging": false
        },
        {
            "id": "humanInputAgentflow_0",
            "position": {
                "x": 243.2954863222049,
                "y": 83.47492229383522
            },
            "type": "agentFlow",
            "data": {
                "id": "humanInputAgentflow_0",
                "label": "Human Input 0",
                "version": 1,
                "name": "humanInputAgentflow",
                "type": "HumanInput",
                "color": "#6E6EFD",
                "baseClasses": ["HumanInput"],
                "category": "Agent Flows",
                "description": "Request human input, approval or rejection during execution",
                "inputParams": [
                    {
                        "label": "Description Type",
                        "name": "humanInputDescriptionType",
                        "type": "options",
                        "options": [
                            {
                                "label": "Fixed",
                                "name": "fixed",
                                "description": "Specify a fixed description"
                            },
                            {
                                "label": "Dynamic",
                                "name": "dynamic",
                                "description": "Use LLM to generate a description"
                            }
                        ],
                        "id": "humanInputAgentflow_0-input-humanInputDescriptionType-options",
                        "display": true
                    },
                    {
                        "label": "Description",
                        "name": "humanInputDescription",
                        "type": "string",
                        "placeholder": "Are you sure you want to proceed?",
                        "acceptVariable": true,
                        "rows": 4,
                        "show": {
                            "humanInputDescriptionType": "fixed"
                        },
                        "id": "humanInputAgentflow_0-input-humanInputDescription-string",
                        "display": false
                    },
                    {
                        "label": "Model",
                        "name": "humanInputModel",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "loadConfig": true,
                        "show": {
                            "humanInputDescriptionType": "dynamic"
                        },
                        "id": "humanInputAgentflow_0-input-humanInputModel-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Prompt",
                        "name": "humanInputModelPrompt",
                        "type": "string",
                        "default": "<p>Summarize the conversation, reiterate the last message from the assistant, and ask if user would like to proceed or if they have any feedback. </p>\n<ul>\n<li>Begin by capturing the key points of the conversation, ensuring that you reflect the main ideas and themes discussed.</li>\n<li>Then, clearly reproduce the last message sent by the assistant to maintain continuity. Make sure the whole message is reproduced.</li>\n<li>Finally, ask the user if they would like to proceed, or provide any feedback on the last assistant message</li>\n</ul>\n<h2 id=\"output-format-the-output-should-be-structured-in-three-parts-\">Output Format The output should be structured in three parts in text:</h2>\n<ul>\n<li>A summary of the conversation (1-3 sentences).</li>\n<li>The last assistant message (exactly as it appeared).</li>\n<li>Ask the user if they would like to proceed, or provide any feedback on last assistant message. No other explanation and elaboration is needed.</li>\n</ul>\n",
                        "acceptVariable": true,
                        "generateInstruction": true,
                        "rows": 4,
                        "show": {
                            "humanInputDescriptionType": "dynamic"
                        },
                        "id": "humanInputAgentflow_0-input-humanInputModelPrompt-string",
                        "display": true
                    },
                    {
                        "label": "Enable Feedback",
                        "name": "humanInputEnableFeedback",
                        "type": "boolean",
                        "default": true,
                        "id": "humanInputAgentflow_0-input-humanInputEnableFeedback-boolean",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "humanInputDescriptionType": "dynamic",
                    "humanInputModel": "chatOpenAI",
                    "humanInputModelPrompt": "<p>Summarize the conversation, reiterate the last message from the assistant, and ask if user would like to proceed or if they have any feedback. </p>\n<ul>\n<li>Begin by capturing the key points of the conversation, ensuring that you reflect the main ideas and themes discussed.</li>\n<li>Then, clearly reproduce the last message sent by the assistant to maintain continuity. Make sure the whole message is reproduced.</li>\n<li>Finally, ask the user if they would like to proceed, or provide any feedback on the last assistant message</li>\n</ul>\n<h2 id=\"output-format-the-output-should-be-structured-in-three-parts-\">Output Format The output should be structured in three parts in text:</h2>\n<ul>\n<li>A summary of the conversation (1-3 sentences).</li>\n<li>The last assistant message (exactly as it appeared).</li>\n<li>Ask the user if they would like to proceed, or provide any feedback on last assistant message. No other explanation and elaboration is needed.</li>\n</ul>\n",
                    "humanInputEnableFeedback": true,
                    "humanInputModelConfig": {
                        "cache": "",
                        "modelName": "gpt-4o-mini",
                        "temperature": 0.9,
                        "streaming": true,
                        "maxTokens": "",
                        "topP": "",
                        "frequencyPenalty": "",
                        "presencePenalty": "",
                        "timeout": "",
                        "strictToolCalling": "",
                        "stopSequence": "",
                        "basepath": "",
                        "proxyUrl": "",
                        "baseOptions": "",
                        "allowImageUploads": "",
                        "imageResolution": "low",
                        "reasoningEffort": "medium",
                        "humanInputModel": "chatOpenAI"
                    }
                },
                "outputAnchors": [
                    {
                        "id": "humanInputAgentflow_0-output-0",
                        "label": "Human Input",
                        "name": "humanInputAgentflow"
                    },
                    {
                        "id": "humanInputAgentflow_0-output-1",
                        "label": "Human Input",
                        "name": "humanInputAgentflow"
                    }
                ],
                "outputs": {
                    "humanInputAgentflow": ""
                },
                "selected": false
            },
            "width": 161,
            "height": 80,
            "selected": false,
            "positionAbsolute": {
                "x": 243.2954863222049,
                "y": 83.47492229383522
            },
            "dragging": false
        },
        {
            "id": "directReplyAgentflow_0",
            "position": {
                "x": 465.29548632220485,
                "y": 30.474922293835235
            },
            "type": "agentFlow",
            "data": {
                "id": "directReplyAgentflow_0",
                "label": "Direct Reply 0",
                "version": 1,
                "name": "directReplyAgentflow",
                "type": "DirectReply",
                "color": "#4DDBBB",
                "hideOutput": true,
                "baseClasses": ["DirectReply"],
                "category": "Agent Flows",
                "description": "Directly reply to the user with a message",
                "inputParams": [
                    {
                        "label": "Message",
                        "name": "directReplyMessage",
                        "type": "string",
                        "rows": 4,
                        "acceptVariable": true,
                        "id": "directReplyAgentflow_0-input-directReplyMessage-string",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "directReplyMessage": "<p><span class=\"variable\" data-type=\"mention\" data-id=\"agentAgentflow_0\" data-label=\"agentAgentflow_0\">{{ agentAgentflow_0 }}</span> </p>"
                },
                "outputAnchors": [],
                "outputs": {},
                "selected": false
            },
            "width": 155,
            "height": 65,
            "selected": false,
            "positionAbsolute": {
                "x": 465.29548632220485,
                "y": 30.474922293835235
            },
            "dragging": false
        }
    ],
    "edges": [
        {
            "source": "startAgentflow_0",
            "sourceHandle": "startAgentflow_0-output-startAgentflow",
            "target": "agentAgentflow_0",
            "targetHandle": "agentAgentflow_0",
            "data": {
                "sourceColor": "#7EE787",
                "targetColor": "#7EE787",
                "isHumanInput": false
            },
            "type": "agentFlow",
            "id": "startAgentflow_0-startAgentflow_0-output-startAgentflow-agentAgentflow_0-agentAgentflow_0"
        },
        {
            "source": "agentAgentflow_0",
            "sourceHandle": "agentAgentflow_0-output-agentAgentflow",
            "target": "humanInputAgentflow_0",
            "targetHandle": "humanInputAgentflow_0",
            "data": {
                "sourceColor": "#4DD0E1",
                "targetColor": "#4DD0E1",
                "isHumanInput": false
            },
            "type": "agentFlow",
            "id": "agentAgentflow_0-agentAgentflow_0-output-agentAgentflow-humanInputAgentflow_0-humanInputAgentflow_0"
        },
        {
            "source": "humanInputAgentflow_0",
            "sourceHandle": "humanInputAgentflow_0-output-1",
            "target": "loopAgentflow_0",
            "targetHandle": "loopAgentflow_0",
            "data": {
                "sourceColor": "#6E6EFD",
                "targetColor": "#6E6EFD",
                "edgeLabel": "reject",
                "isHumanInput": true
            },
            "type": "agentFlow",
            "id": "humanInputAgentflow_0-humanInputAgentflow_0-output-1-loopAgentflow_0-loopAgentflow_0"
        },
        {
            "source": "humanInputAgentflow_0",
            "sourceHandle": "humanInputAgentflow_0-output-0",
            "target": "directReplyAgentflow_0",
            "targetHandle": "directReplyAgentflow_0",
            "data": {
                "sourceColor": "#6E6EFD",
                "targetColor": "#6E6EFD",
                "edgeLabel": "proceed",
                "isHumanInput": true
            },
            "type": "agentFlow",
            "id": "humanInputAgentflow_0-humanInputAgentflow_0-output-0-directReplyAgentflow_0-directReplyAgentflow_0"
        }
    ]
}
